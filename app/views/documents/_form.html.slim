= form_for document, html: { class: 'uk-form uk-form-stacked' }, remote: true do |f|
  = f.check_box :draft_flag, { class: 'uk-hidden' }
  .uk-form-row
    .uk-grid
      .uk-width-medium-1-3
        = select_tag :template, options_from_collection_for_select(templates, :id, :title), { prompt: 'Template', class: 'uk-form-large uk-width-1-1' }
      .uk-margin-top.uk-visible-small
      .uk-width-medium-2-3
        = f.text_field :title, autofocus: true, class: 'uk-form-large uk-width-1-1', placeholder: 'Title'
  .uk-form-row
    = f.text_area :markdown, 'data-uk-htmleditor' => '{ markdown: true }'
  .uk-form-row
    .uk-grid
      .uk-width-medium-2-3
        .uk-placeholder.uk-text-center#upload-drop
          i.uk-icon-cloud-upload.uk-icon-medium.uk-text-muted.uk-margin-small-right
          | Attach images by dropping them here or&nbsp;
          a.uk-form-file
            | selecting one
            input#upload-select type="file" multiple="multiple"
          | .
      .uk-margin-top.uk-visible-small
      .uk-width-medium-1-3.uk-text-center
        .uk-button-group
          button.uk-button.uk-button-big.uk-button-primary#document-publish
            i.uk-icon-globe
            span.exo.exo-bold Publish
          button.uk-button.uk-button-big#document-draft
            i.uk-icon-pencil
            span.exo.exo-bold Draft

- if document.id && document.is_publish?
  coffee:
    $('#document-draft').attr 'disabled', true

javascript:
  websocket_url = '#{request.raw_host_with_port}/websocket'
  user_account = '#{current_user.account}'

coffee:
  dispatcher = new WebSocketRails websocket_url
  channel = dispatcher.subscribe user_account
  channel.bind 'create_picture', ( data ) ->
    content = '\n![' + data.file_name + '](' + data.url + ' \"' + data.file_name + '\")\n'
    $('.CodeMirror')[0].CodeMirror.replaceSelection content
  uk_upload_settings = {
    action: '/pictures',
    allow: '*.(jpeg|jpg|png|gif)',
    notallowed: ->
      UIkit.notify { message: '不正なファイルです', timeout: 3000, status: 'danger' }
    error: ->
      UIkit.notify { message: 'エラーが発生しました', timeout: 3000, status: 'danger' }
    abort: ->
      UIkit.notify { message: 'アップロードに失敗しました', timeout: 3000, status: 'danger' }
    params: {
      authenticity_token: $('meta[name=\"csrf-token\"]').attr('content')
    }
  }
  uk_select = UIkit.uploadSelect $('#upload-select'), uk_upload_settings
  uk_drop = UIkit.uploadDrop $('#upload-drop'), uk_upload_settings
  $('#template').on 'change', ->
    if $(this).val() is ''
      $(this).addClass 'placeholder'
    else
      $(this).removeClass 'placeholder'
    if $(':selected').attr('value') isnt ''
      $.ajax {
        'url': '/templates/' + $(':selected').attr('value') + '/select',
        'type': 'GET',
        'data-type': 'html'
      }
  $('#template').change()
  $('#document-publish').on 'click', (event) ->
    event.preventDefault()
    $('#document_draft_flag').prop 'checked', false
    $('.uk-form').submit()
  $('#document-draft').on 'click', (event) ->
    event.preventDefault()
    $('#document_draft_flag').prop 'checked', true
    $('.uk-form').submit()
